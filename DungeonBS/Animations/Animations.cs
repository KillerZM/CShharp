using System;
using System.Threading;
namespace DungeonBS.Animations{
    public class Animation{
        public static void Logo(){
            Console.Clear();
            
            Console.WriteLine("       ____                                        ____ _____");
            Console.WriteLine("      / __ /__  ______  ____ ____  ____  ____     / __ ) ___/");
            Console.WriteLine("     / / / / / / / __ // __ `/ _ // __ // __  /  / __  /__ / ");
            Console.WriteLine("    / /_/ / /_/ / / / / /_/ /  __/ /_/ / / / /  / /_/ /__/ / ");
            Console.WriteLine("   /_____//__,_/_/ /_//__, //___//____/_/ /_/  /_____/____/  ");
            Console.WriteLine("                     /____/                                  ");
        }
        public static void AnDragon()
        {
            string[] frames = {
                "  O       ,  ,      \n" +
                " /|\\     \\ \\ \\     \n" +
                " / \\     ) \\ \\    _p_\n" +
                "         )^\\))\\)) /  *\\\n" +
                "          \\_|| || / /^`-'\n" +
                "   __     -\\ \\\\--/ /\n" +
                " <'  \\___/   ___. )'\n" +
                "     `====\\ )___/\\\\\n" +
                "          //     `\"    \\\\\n" +
                "          \\\\    /  \\   //\n" +
                "           `\"+=   ==+\"",
                
                "  O        ,  ,      \n" +
                " /|>      \\ \\ \\     \n" +
                " / \\      ) \\ \\    _p_\n" +
                "          )^\\))\\)) /  *\\\n" +
                "           \\_|| || / /^`-'\n" +
                "   __      -\\ \\\\--/ /\n" +
                " <'  \\___/   ___. )'\n" +
                "     `====\\ )___/\\\\\n" +
                "          //     `\"    \\\\\n" +
                "          \\\\    /  \\   //\n" +
                "           `\"+=   ==+\"",

                "  O        ,  ,      \n" +
                " /|\\      \\ \\ \\     \n" +
                " / \\      ) \\ \\    _p_\n" +
                "          )^\\))\\)) /  *\\\n" +
                "           \\_|| || / /^`-'\n" +
                "   __      -\\ \\\\--/ /\n" +
                " <'  \\___/   ___. )'\n" +
                "     `====\\ )___/\\\\\n" +
                "          //     `\"    \\\\\n" +
                "          \\\\    /  \\   //\n" +
                "           `\"+=   ==+\""
            };

            foreach (string frame in frames)
            {
                Console.Clear();
                Console.WriteLine(frame);
                Thread.Sleep(200);
            }
        }

        public static void AnLobo()
        {
            string[] frames = {
                "  O                    ,     ,  \n" +
                " /|\\                  |\\---/|   \n" +
                " / \\                 /  , , |   \n" +
                "                 __.-'|  / \\ /  \n" +
                "          __ ___.-'        ._O| \n" +
                "       .-'  '        :      _/  \n" +
                "      / ,    .        .     |   \n" +
                "     :  ;    :        :   _/    \n" +
                "     |  |   .'     __:   /      \n" +
                "     |  :   /'----'| \\  |       \n" +
                "      \\  |\\  |      | /| |      \n" +
                "       '.'| /       || \\ |      \n" +
                "        | /|.'       '.l \\_     \n" +
                "        || ||             '-'    \n" +
                "        '-''-'                  \n",

                "  O                     ,     , \n" +
                " /|>                   |\\---/|  \n" +
                " / \\                  /  , , |  \n" +
                "                 __.-'|  / \\ /  \n" +
                "          __ ___.-'        ._O| \n" +
                "       .-'  '        :      _/  \n" +
                "      / ,    .        .     |   \n" +
                "     :  ;    :        :   _/    \n" +
                "     |  |   .'     __:   /      \n" +
                "     |  :   /'----'| \\  |       \n" +
                "      \\  |\\  |      | /| |      \n" +
                "       '.'| /       || \\ |      \n" +
                "        | /|.'       '.l \\_     \n" +
                "        || ||             '-'    \n" +
                "        '-''-'                  \n",

                "  O                     ,     , \n" +
                " /|\\                   |\\---/|  \n" +
                " / \\                  /  , , |  \n" +
                "                 __.-'|  / \\ /  \n" +
                "          __ ___.-'        ._O| \n" +
                "       .-'  '        :      _/  \n" +
                "      / ,    .        .     |   \n" +
                "     :  ;    :        :   _/    \n" +
                "     |  |   .'     __:   /      \n" +
                "     |  :   /'----'| \\  |       \n" +
                "      \\  |\\  |      | /| |      \n" +
                "       '.'| /       || \\ |      \n" +
                "        | /|.'       '.l \\_     \n" +
                "        || ||             '-'    \n" +
                "        '-''-'                  \n"
            };

            foreach (string frame in frames)
            {
                Console.Clear();
                Console.WriteLine(frame);
                Thread.Sleep(200);
            }
        }
        public static void AnGolem()
        {
            string[] frames = {
                "  O                     \n" +
                " /|\\                   \n" +
                " / \\                   \n" +
                "                       \n" +
                "⠀⠀⠀⠀⠀⠀⢀⢄⡒⠒⡒⠀⢰⠒⣒⢶⠤⡀⠀⠀⠀\n" +
                "⠀⠀⠀⠀⠀⡰⡩⠂⠀⠀⠀⠀⠀⠣⡊⠙⣷⢱⠀⠀⠀\n" +
                "⠀⠀⠀⠀⣰⡑⣀⣂⡠⢀⠀⠀⠄⡀⡌⡃⡽⢽⡆⠀⠀\n" +
                "⠀⠀⠀⠀⠻⣿⣿⣿⣿⣿⣿⣶⣶⣦⡤⢄⣌⣻⣇⠀⠀\n" +
                "⠀⠀⠀⠀⠀⣾⣿⠟⠻⣿⡿⠛⠁⠀⢷⡄⣿⢿⢿⠀⠀\n" +
                "⠀⠀⠀⠀⡘⡠⢀⣠⢲⠃⢁⠀⠀⢠⠖⠛⠓⢸⣼⡄⠀\n" +
                "⠀⠀⠀⢰⢋⡴⢋⡏⡜⠐⠁⠈⠤⠀⠀⠀⠀⢮⣻⣧⠀\n" +
                "⠀⣀⠔⠕⠒⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⡀⠐⢻⡟⢹⡀\n" +
                "⠰⣷⣶⣤⣤⣄⣀⣀⣴⣦⡆⠀⠀⠀⡠⡂⠀⠈⢷⡴⡇\n" +
                "⠀⠀⣼⣿⣿⣿⣿⣿⡿⠋⠁⠀⠀⢀⠇⣴⣿⣶⣾⣿⣧\n" +
                "⠀⢰⣯⣭⣭⣌⣀⣀⠀⠀⠀⠀⠀⠀⠀⠋⢿⣿⣿⣿⣿\n" +
                "⠀⠀⣿⣿⣿⣿⣿⣿⣯⡿⠔⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿\n",

                "  O                     \n" +
                " /|>                   \n" +
                " / \\                   \n" +
                "                       \n" +
                "⠀⠀⠀⠀⠀⠀⢀⢄⡒⠒⡒⠀⢰⠒⣒⢶⠤⡀⠀⠀⠀\n" +
                "⠀⠀⠀⠀⠀⡰⡩⠂⠀⠀⠀⠀⠀⠣⡊⠙⣷⢱⠀⠀⠀\n" +
                "⠀⠀⠀⠀⣰⡑⣀⣂⡠⢀⠀⠀⠄⡀⡌⡃⡽⢽⡆⠀⠀\n" +
                "⠀⠀⠀⠀⠻⣿⣿⣿⣿⣿⣿⣶⣶⣦⡤⢄⣌⣻⣇⠀⠀\n" +
                "⠀⠀⠀⠀⠀⣾⣿⠟⠻⣿⡿⠛⠁⠀⢷⡄⣿⢿⢿⠀⠀\n" +
                "⠀⠀⠀⠀⡘⡠⢀⣠⢲⠃⢁⠀⠀⢠⠖⠛⠓⢸⣼⡄⠀\n" +
                "⠀⠀⠀⢰⢋⡴⢋⡏⡜⠐⠁⠈⠤⠀⠀⠀⠀⢮⣻⣧⠀\n" +
                "⠀⣀⠔⠕⠒⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⡀⠐⢻⡟⢹⡀\n" +
                "⠰⣷⣶⣤⣤⣄⣀⣀⣴⣦⡆⠀⠀⠀⡠⡂⠀⠈⢷⡴⡇\n" +
                "⠀⠀⣼⣿⣿⣿⣿⣿⡿⠋⠁⠀⠀⢀⠇⣴⣿⣶⣾⣿⣧\n" +
                "⠀⢰⣯⣭⣭⣌⣀⣀⠀⠀⠀⠀⠀⠀⠀⠋⢿⣿⣿⣿⣿\n" +
                "⠀⠀⣿⣿⣿⣿⣿⣿⣯⡿⠔⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿\n",

                "  O                     \n" +
                " /|\\                   \n" +
                " / \\                   \n" +
                "                       \n" +
                "⠀⠀⠀⠀⠀⠀⢀⢄⡒⠒⡒⠀⢰⠒⣒⢶⠤⡀⠀⠀⠀\n" +
                "⠀⠀⠀⠀⠀⡰⡩⠂⠀⠀⠀⠀⠀⠣⡊⠙⣷⢱⠀⠀⠀\n" +
                "⠀⠀⠀⠀⣰⡑⣀⣂⡠⢀⠀⠀⠄⡀⡌⡃⡽⢽⡆⠀⠀\n" +
                "⠀⠀⠀⠀⠻⣿⣿⣿⣿⣿⣿⣶⣶⣦⡤⢄⣌⣻⣇⠀⠀\n" +
                "⠀⠀⠀⠀⠀⣾⣿⠟⠻⣿⡿⠛⠁⠀⢷⡄⣿⢿⢿⠀⠀\n" +
                "⠀⠀⠀⠀⡘⡠⢀⣠⢲⠃⢁⠀⠀⢠⠖⠛⠓⢸⣼⡄⠀\n" +
                "⠀⠀⠀⢰⢋⡴⢋⡏⡜⠐⠁⠈⠤⠀⠀⠀⠀⢮⣻⣧⠀\n" +
                "⠀⣀⠔⠕⠒⠈⠉⠀⠀⠀⠀⠀⠀⠀⠀⡀⠐⢻⡟⢹⡀\n" +
                "⠰⣷⣶⣤⣤⣄⣀⣀⣴⣦⡆⠀⠀⠀⡠⡂⠀⠈⢷⡴⡇\n" +
                "⠀⠀⣼⣿⣿⣿⣿⣿⡿⠋⠁⠀⠀⢀⠇⣴⣿⣶⣾⣿⣧\n" +
                "⠀⢰⣯⣭⣭⣌⣀⣀⠀⠀⠀⠀⠀⠀⠀⠋⢿⣿⣿⣿⣿\n" +
                "⠀⠀⣿⣿⣿⣿⣿⣿⣯⡿⠔⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿\n"
            };

            foreach (string frame in frames)
            {
                Console.Clear();
                Console.WriteLine(frame);
                Thread.Sleep(200);
            }
        }
    }
}


    